img {
  max-width: 100%;
  max-height: 100%;
}


.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  // overflow-x: hidden;
  width: 100%;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  /* For text formatting. */
  display: grid;
  grid-template-columns: 25% 25% 25% 25%;
  grid-template-rows: 33% 33% 33%;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  // transform: translateZ(-1px) scale(1.5);
  background-attachment: fixed;
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}
/* The styling for the static div. */
/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url("../img/fl-0.jpg");
}

.bg2::after {
  background-image: url("../img/fl-1.png");
}

.bg3::after {
  background-image: url("../img/fl-2.png");
}

.bg4::after {
  background-image: url("../img/fl-2.png");
}

.circle {
  font-family: sans-serif;
  color: red;
  text-shadow: 0 0 5 #090bfb;
}

.square {
  font-family: serif;
  color: rgb(75, 42, 153);
  text-shadow: 0 0 5px green;
}


.vis {
  // @include data-aos
  background-image: url("../img/visual.gif");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: -3;
}

.checker {
  grid-row: 2;
  grid-column: 3 / 5;
  // height: 500%;
  background-image: url("../img/checker.gif");
  background-size: 50%;
}
.title {
  grid-row: 1;
  grid-column: 2 / 4;
}

.subtitle {
  grid-row: 2;
  grid-column: 2 / 4;
}

.text {
  grid-row: 2 / 3;
  grid-column: 2 / 4;
}

#author {
  grid-row: 3;
  grid-column: 2 / 4;
}

.one-one {
  grid-row: 1;
  grid-column: 1;
}

.one-two {
  grid-row: 1;
  grid-column: 2;
}

.one-three {
  grid-row: 1;
  grid-column: 3;
}

.one-four {
  grid-row: 1;
  grid-column: 4;
}

.two-one {
  grid-row: 2;
  grid-column: 1;
}

.two-two {
  grid-row: 2;
  grid-column: 2;
}

.two-three {
  grid-row: 2;
  grid-column: 3;
}
.two-threefour {
  grid-row: 2;
  grid-column: 3 / 5;
}

.two-four {
  grid-row: 2;
  grid-column: 4;
}

.three-one {
  grid-row: 3;
  grid-column: 1;
}

.three-two {
  grid-row: 3;
  grid-column: 2;
}

.three-three {
  grid-row: 3;
  grid-column: 3;
}

.three-four {
  grid-row: 3;
  grid-column: 4;
}
